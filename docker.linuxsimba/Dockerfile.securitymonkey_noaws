FROM python:2.7
MAINTAINER stanley@linuxsimba.com


RUN pip install --upgrade pip wheel jinja2

RUN apt-get update && \
  apt-get -y -q install git build-essential python-dev libyaml-dev \
    libffi-dev libpq-dev libxml2-dev libxmlsec1-dev supervisor libpq5 \
    nginx


RUN git clone --branch noaws https://github.com/linuxsimba/security_monkey /usr/local/src/security_monkey

WORKDIR /usr/local/src/security_monkey


RUN python setup.py bdist_wheel
RUN pip install dist/*

RUN apt-get purge -y git build-essential python-dev libyaml-dev \
    libffi-dev libpq-dev libxml2-dev libxmlsec1-dev && \
  apt-get -y -q install libxmlsec1-openssl vim net-tools && \
  apt-get -y autoremove && \
  apt-get clean

RUN mkdir /var/log/security_monkey &&\
  chown www-data:www-data /var/log/security_monkey

RUN cp supervisor/security_monkey.conf /etc/supervisor/conf.d/security_monkey.conf

ADD ./config-deploy.py.noaws /usr/local/src/security_monkey/env-config/config-deploy.py

ADD ./dockerize /usr/local/bin/dockerize

ADD ./minimum_datapush.py /usr/local/src/security_monkey/minimum_datapush.py

RUN chmod 755 /usr/local/bin/dockerize

COPY docker-entrypoint.sh /

ENV SECURITY_MONKEY_SETTINGS /usr/local/src/security_monkey/env-config/config-deploy.py

COPY securitymonkey_nginx.conf /etc/nginx/sites-available/securitymonkey

RUN ln -s /etc/nginx/sites-available/securitymonkey /etc/nginx/sites-enabled/securitymonkey

COPY create_ssl_key.sh /tmp/create_ssl_key.sh

ADD static.tar /usr/local/src/security_monkey/security_monkey

EXPOSE 443

RUN bash /tmp/create_ssl_key.sh

# for testing only
# CMD tail -f /etc/hosts

CMD ["/docker-entrypoint.sh"]
